--liquibase formatted sql
--changeset rat:authnz-001
CREATE TABLE authnz.account
(
    username      VARCHAR(50)  NOT NULL,
    password_hash VARCHAR(50)  NOT NULL,
    email         VARCHAR(254) NOT NULL,
    enabled       BOOLEAN      NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (username)
);

--changeset rat:authnz-001a
CREATE TABLE authnz.authority
(
    app_id    VARCHAR(10) NOT NULL,
    target    VARCHAR(30) NOT NULL,
    operation VARCHAR(10) NOT NULL,
    authority VARCHAR(52) GENERATED ALWAYS AS (app_id || ':' || target || ':' || operation) STORED,
    CONSTRAINT pk_authority PRIMARY KEY (authority)
);
--changeset rat:authnz-002
CREATE TABLE authnz.user_authority
(
    username  VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    CONSTRAINT fk_authority_user FOREIGN KEY (username) REFERENCES account (username) ON DELETE CASCADE,
    CONSTRAINT uc_authority UNIQUE (username, authority)
);

--changeset rat:authnz-003
CREATE TABLE authnz.role
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    role_name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_group PRIMARY KEY (id),
    CONSTRAINT uc_group UNIQUE (role_name)
);

--changeset rat:authnz-004
CREATE TABLE authnz.role_authority
(
    role_id   BIGINT      NOT NULL,
    authority VARCHAR(50) NOT NULL,
    CONSTRAINT fk_group_authority_group FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE,
    CONSTRAINT uc_group_authority UNIQUE (role_id, authority)
);

--changeset rat:authnz-005
CREATE TABLE authnz.role_member
(
    username VARCHAR(50) NOT NULL,
    role_id  BIGINT      NOT NULL,
    CONSTRAINT fk_role_member_account FOREIGN KEY (username) REFERENCES account (username) ON DELETE CASCADE,
    CONSTRAINT fk_role_member_role FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE
)
