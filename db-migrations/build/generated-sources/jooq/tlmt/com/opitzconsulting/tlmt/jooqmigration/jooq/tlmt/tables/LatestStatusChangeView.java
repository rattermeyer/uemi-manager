/*
 * This file is generated by jOOQ.
 */
package com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables;


import com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.Tlmt;
import com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables.records.LatestStatusChangeViewRecord;

import java.time.OffsetDateTime;
import java.util.Collection;
import java.util.UUID;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LatestStatusChangeView extends TableImpl<LatestStatusChangeViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tlmt.latest_status_change_view</code>
     */
    public static final LatestStatusChangeView LATEST_STATUS_CHANGE_VIEW = new LatestStatusChangeView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LatestStatusChangeViewRecord> getRecordType() {
        return LatestStatusChangeViewRecord.class;
    }

    /**
     * The column <code>tlmt.latest_status_change_view.portfolioitem_id</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, Long> PORTFOLIOITEM_ID = createField(DSL.name("portfolioitem_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>tlmt.latest_status_change_view.portfolioitem_uuid</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, UUID> PORTFOLIOITEM_UUID = createField(DSL.name("portfolioitem_uuid"), SQLDataType.UUID, this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.techradar_id</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, Long> TECHRADAR_ID = createField(DSL.name("techradar_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>tlmt.latest_status_change_view.portfolioitem_name</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String> PORTFOLIOITEM_NAME = createField(DSL.name("portfolioitem_name"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.tags</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String[]> TAGS = createField(DSL.name("tags"), SQLDataType.VARCHAR.array(), this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.new_status_id</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, Long> NEW_STATUS_ID = createField(DSL.name("new_status_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.new_status</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String> NEW_STATUS = createField(DSL.name("new_status"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.old_status_id</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, Long> OLD_STATUS_ID = createField(DSL.name("old_status_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.old_status</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String> OLD_STATUS = createField(DSL.name("old_status"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.timestamp</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, OffsetDateTime> TIMESTAMP = createField(DSL.name("timestamp"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>tlmt.latest_status_change_view.reason</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String> REASON = createField(DSL.name("reason"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>tlmt.latest_status_change_view.portfolioitem_is_active</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, Boolean> PORTFOLIOITEM_IS_ACTIVE = createField(DSL.name("portfolioitem_is_active"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column
     * <code>tlmt.latest_status_change_view.portfolioitem_description</code>.
     */
    public final TableField<LatestStatusChangeViewRecord, String> PORTFOLIOITEM_DESCRIPTION = createField(DSL.name("portfolioitem_description"), SQLDataType.VARCHAR(1024), this, "");

    private LatestStatusChangeView(Name alias, Table<LatestStatusChangeViewRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private LatestStatusChangeView(Name alias, Table<LatestStatusChangeViewRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "latest_status_change_view" as  SELECT sc_new_radar.item_id AS portfolioitem_id,
         portfolioitem.uuid AS portfolioitem_uuid,
         sc_new_radar.techradar_id,
         sc_new_radar.item_name AS portfolioitem_name,
         portfolioitem.tags,
         sc_new_radar.status_id AS new_status_id,
         sc_new_radar.status AS new_status,
         sc_old_radar.status_id AS old_status_id,
         sc_old_radar.status AS old_status,
         sc_new_radar."timestamp",
         sc_new_radar.reason,
         sc_new_radar.item_is_active AS portfolioitem_is_active,
         sc_new_radar.item_description AS portfolioitem_description
        FROM ((( SELECT st_ch.id AS status_id,
                 st_ch.new_status AS status,
                 st_ch.portfolio_version_id AS techradar_id,
                 st_ch."timestamp",
                 st_ch.reason,
                 max_st_ch.id AS item_id,
                 max_st_ch.name AS item_name,
                 max_st_ch.active AS item_is_active,
                 max_st_ch.description AS item_description
                FROM (tlmt.statuschange st_ch
                  JOIN ( SELECT max(sc.id) AS max_id,
                         it.id,
                         it.name,
                         it.active,
                         it.description
                        FROM (tlmt.statuschange sc
                          JOIN tlmt.portfolioitem it ON ((sc.portfolioitem_id = it.id)))
                       WHERE (it.active = true)
                       GROUP BY sc.portfolio_version_id, it.id, it.name
                      HAVING (sc.portfolio_version_id IN ( SELECT portfolio_version.id
                                FROM tlmt.portfolio_version
                               ORDER BY portfolio_version.id DESC
                              LIMIT 1))) max_st_ch ON ((st_ch.id = max_st_ch.max_id)))) sc_new_radar
          FULL JOIN ( SELECT st_ch.id AS status_id,
                 st_ch.new_status AS status,
                 st_ch.portfolio_version_id AS techradar_id,
                 max_st_ch.id AS item_id,
                 max_st_ch.name AS item_name
                FROM (tlmt.statuschange st_ch
                  JOIN ( SELECT max(sc.id) AS max_id,
                         it.id,
                         it.name
                        FROM (tlmt.statuschange sc
                          JOIN tlmt.portfolioitem it ON ((sc.portfolioitem_id = it.id)))
                       WHERE (it.active = true)
                       GROUP BY sc.portfolio_version_id, it.id, it.name
                      HAVING (sc.portfolio_version_id IN ( SELECT portfolio_version.id
                                FROM tlmt.portfolio_version
                               WHERE (portfolio_version.id < ( SELECT max(techradar_1.id) AS max
                                        FROM tlmt.portfolio_version techradar_1))
                               ORDER BY portfolio_version.id DESC
                              LIMIT 1))) max_st_ch ON ((st_ch.id = max_st_ch.max_id)))) sc_old_radar ON ((sc_new_radar.item_id = sc_old_radar.item_id)))
          JOIN tlmt.portfolioitem ON ((sc_new_radar.item_id = portfolioitem.id)));
        """), where);
    }

    /**
     * Create an aliased <code>tlmt.latest_status_change_view</code> table
     * reference
     */
    public LatestStatusChangeView(String alias) {
        this(DSL.name(alias), LATEST_STATUS_CHANGE_VIEW);
    }

    /**
     * Create an aliased <code>tlmt.latest_status_change_view</code> table
     * reference
     */
    public LatestStatusChangeView(Name alias) {
        this(alias, LATEST_STATUS_CHANGE_VIEW);
    }

    /**
     * Create a <code>tlmt.latest_status_change_view</code> table reference
     */
    public LatestStatusChangeView() {
        this(DSL.name("latest_status_change_view"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Tlmt.TLMT;
    }

    @Override
    public LatestStatusChangeView as(String alias) {
        return new LatestStatusChangeView(DSL.name(alias), this);
    }

    @Override
    public LatestStatusChangeView as(Name alias) {
        return new LatestStatusChangeView(alias, this);
    }

    @Override
    public LatestStatusChangeView as(Table<?> alias) {
        return new LatestStatusChangeView(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public LatestStatusChangeView rename(String name) {
        return new LatestStatusChangeView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LatestStatusChangeView rename(Name name) {
        return new LatestStatusChangeView(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public LatestStatusChangeView rename(Table<?> name) {
        return new LatestStatusChangeView(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView where(Condition condition) {
        return new LatestStatusChangeView(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public LatestStatusChangeView where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public LatestStatusChangeView where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public LatestStatusChangeView where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public LatestStatusChangeView where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public LatestStatusChangeView whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
