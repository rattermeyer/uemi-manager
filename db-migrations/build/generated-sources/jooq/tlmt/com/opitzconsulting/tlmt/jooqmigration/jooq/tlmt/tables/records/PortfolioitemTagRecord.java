/*
 * This file is generated by jOOQ.
 */
package com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables.records;


import com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables.PortfolioitemTag;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PortfolioitemTagRecord extends UpdatableRecordImpl<PortfolioitemTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tlmt.portfolioitem_tag.portfolioitem_id</code>.
     */
    public void setPortfolioitemId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>tlmt.portfolioitem_tag.portfolioitem_id</code>.
     */
    public Long getPortfolioitemId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tlmt.portfolioitem_tag.tag_id</code>.
     */
    public void setTagId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>tlmt.portfolioitem_tag.tag_id</code>.
     */
    public Long getTagId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PortfolioitemTagRecord
     */
    public PortfolioitemTagRecord() {
        super(PortfolioitemTag.PORTFOLIOITEM_TAG);
    }

    /**
     * Create a detached, initialised PortfolioitemTagRecord
     */
    public PortfolioitemTagRecord(Long portfolioitemId, Long tagId) {
        super(PortfolioitemTag.PORTFOLIOITEM_TAG);

        setPortfolioitemId(portfolioitemId);
        setTagId(tagId);
        resetChangedOnNotNull();
    }
}
