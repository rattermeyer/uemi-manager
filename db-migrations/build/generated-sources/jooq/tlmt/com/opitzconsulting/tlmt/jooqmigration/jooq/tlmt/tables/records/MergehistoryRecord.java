/*
 * This file is generated by jOOQ.
 */
package com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables.records;


import com.opitzconsulting.tlmt.jooqmigration.jooq.tlmt.tables.Mergehistory;

import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MergehistoryRecord extends UpdatableRecordImpl<MergehistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tlmt.mergehistory.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>tlmt.mergehistory.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tlmt.mergehistory.reason</code>.
     */
    public void setReason(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tlmt.mergehistory.reason</code>.
     */
    public String getReason() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tlmt.mergehistory.merge_timestamp</code>.
     */
    public void setMergeTimestamp(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>tlmt.mergehistory.merge_timestamp</code>.
     */
    public OffsetDateTime getMergeTimestamp() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>tlmt.mergehistory.from_id</code>.
     */
    public void setFromId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>tlmt.mergehistory.from_id</code>.
     */
    public Long getFromId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>tlmt.mergehistory.to_id</code>.
     */
    public void setToId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>tlmt.mergehistory.to_id</code>.
     */
    public Long getToId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MergehistoryRecord
     */
    public MergehistoryRecord() {
        super(Mergehistory.MERGEHISTORY);
    }

    /**
     * Create a detached, initialised MergehistoryRecord
     */
    public MergehistoryRecord(Long id, String reason, OffsetDateTime mergeTimestamp, Long fromId, Long toId) {
        super(Mergehistory.MERGEHISTORY);

        setId(id);
        setReason(reason);
        setMergeTimestamp(mergeTimestamp);
        setFromId(fromId);
        setToId(toId);
        resetChangedOnNotNull();
    }
}
