/*
 * This file is generated by jOOQ.
 */
package com.opitzconsulting.tlmt.jooqmigration.jooq.lifecycle.enums;


import com.opitzconsulting.tlmt.jooqmigration.jooq.lifecycle.Lifecycle;

import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public enum TagGroupRule implements EnumType {

    OPTIONAL("OPTIONAL"),

    AT_LEAST_ONE("AT_LEAST_ONE"),

    AT_MOST_ONE("AT_MOST_ONE"),

    EXACTLY_ONE("EXACTLY_ONE"),

    NONE("NONE");

    private final String literal;

    private TagGroupRule(String literal) {
        this.literal = literal;
    }

    @Override
    public Catalog getCatalog() {
        return getSchema().getCatalog();
    }

    @Override
    public Schema getSchema() {
        return Lifecycle.LIFECYCLE;
    }

    @Override
    public String getName() {
        return "tag_group_rule";
    }

    @Override
    public String getLiteral() {
        return literal;
    }

    /**
     * Lookup a value of this EnumType by its literal. Returns
     * <code>null</code>, if no such value could be found, see {@link
     * EnumType#lookupLiteral(Class, String)}.
     */
    public static TagGroupRule lookupLiteral(String literal) {
        return EnumType.lookupLiteral(TagGroupRule.class, literal);
    }
}
