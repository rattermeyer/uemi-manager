/*
 * This file is generated by jOOQ.
 */
package com.opitzconsulting.tlmt.jooqmigration.jooq.susy.tables;


import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.Keys;
import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.Susy;
import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.enums.ItemType;
import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.enums.ProcessStatus;
import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.tables.ReviewProcess.ReviewProcessPath;
import com.opitzconsulting.tlmt.jooqmigration.jooq.susy.tables.records.ReviewProcessStepRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.UUID;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ReviewProcessStep extends TableImpl<ReviewProcessStepRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>susy.review_process_step</code>
     */
    public static final ReviewProcessStep REVIEW_PROCESS_STEP = new ReviewProcessStep();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReviewProcessStepRecord> getRecordType() {
        return ReviewProcessStepRecord.class;
    }

    /**
     * The column <code>susy.review_process_step.review_process_uuid</code>.
     */
    public final TableField<ReviewProcessStepRecord, UUID> REVIEW_PROCESS_UUID = createField(DSL.name("review_process_uuid"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>susy.review_process_step.step_number</code>.
     */
    public final TableField<ReviewProcessStepRecord, Integer> STEP_NUMBER = createField(DSL.name("step_number"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>susy.review_process_step.status</code>.
     */
    public final TableField<ReviewProcessStepRecord, ProcessStatus> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR.nullable(false).asEnumDataType(ProcessStatus.class), this, "");

    /**
     * The column <code>susy.review_process_step.next_status_decision</code>.
     */
    public final TableField<ReviewProcessStepRecord, String> NEXT_STATUS_DECISION = createField(DSL.name("next_status_decision"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>susy.review_process_step.type_decision</code>.
     */
    public final TableField<ReviewProcessStepRecord, ItemType> TYPE_DECISION = createField(DSL.name("type_decision"), SQLDataType.VARCHAR.asEnumDataType(ItemType.class), this, "");

    /**
     * The column <code>susy.review_process_step.reason</code>.
     */
    public final TableField<ReviewProcessStepRecord, String> REASON = createField(DSL.name("reason"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>susy.review_process_step.created_at</code>.
     */
    public final TableField<ReviewProcessStepRecord, OffsetDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(DSL.field(DSL.raw("now()"), SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column <code>susy.review_process_step.created_by</code>.
     */
    public final TableField<ReviewProcessStepRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(254), this, "");

    /**
     * The column <code>susy.review_process_step.modified_at</code>.
     */
    public final TableField<ReviewProcessStepRecord, OffsetDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(DSL.field(DSL.raw("now()"), SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column <code>susy.review_process_step.modified_by</code>.
     */
    public final TableField<ReviewProcessStepRecord, String> MODIFIED_BY = createField(DSL.name("modified_by"), SQLDataType.VARCHAR(254), this, "");

    /**
     * The column <code>susy.review_process_step.status_entered_at</code>.
     */
    public final TableField<ReviewProcessStepRecord, OffsetDateTime> STATUS_ENTERED_AT = createField(DSL.name("status_entered_at"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>susy.review_process_step.status_exited_at</code>.
     */
    public final TableField<ReviewProcessStepRecord, OffsetDateTime> STATUS_EXITED_AT = createField(DSL.name("status_exited_at"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    private ReviewProcessStep(Name alias, Table<ReviewProcessStepRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private ReviewProcessStep(Name alias, Table<ReviewProcessStepRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>susy.review_process_step</code> table reference
     */
    public ReviewProcessStep(String alias) {
        this(DSL.name(alias), REVIEW_PROCESS_STEP);
    }

    /**
     * Create an aliased <code>susy.review_process_step</code> table reference
     */
    public ReviewProcessStep(Name alias) {
        this(alias, REVIEW_PROCESS_STEP);
    }

    /**
     * Create a <code>susy.review_process_step</code> table reference
     */
    public ReviewProcessStep() {
        this(DSL.name("review_process_step"), null);
    }

    public <O extends Record> ReviewProcessStep(Table<O> path, ForeignKey<O, ReviewProcessStepRecord> childPath, InverseForeignKey<O, ReviewProcessStepRecord> parentPath) {
        super(path, childPath, parentPath, REVIEW_PROCESS_STEP);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class ReviewProcessStepPath extends ReviewProcessStep implements Path<ReviewProcessStepRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> ReviewProcessStepPath(Table<O> path, ForeignKey<O, ReviewProcessStepRecord> childPath, InverseForeignKey<O, ReviewProcessStepRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private ReviewProcessStepPath(Name alias, Table<ReviewProcessStepRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public ReviewProcessStepPath as(String alias) {
            return new ReviewProcessStepPath(DSL.name(alias), this);
        }

        @Override
        public ReviewProcessStepPath as(Name alias) {
            return new ReviewProcessStepPath(alias, this);
        }

        @Override
        public ReviewProcessStepPath as(Table<?> alias) {
            return new ReviewProcessStepPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Susy.SUSY;
    }

    @Override
    public UniqueKey<ReviewProcessStepRecord> getPrimaryKey() {
        return Keys.PK_REVIEW_PROCESS_STATUS;
    }

    @Override
    public List<ForeignKey<ReviewProcessStepRecord, ?>> getReferences() {
        return Arrays.asList(Keys.REVIEW_PROCESS_STEP__FK_REVIEW_PROCESS_STATUS_REVIEW_PROCESS_ID);
    }

    private transient ReviewProcessPath _reviewProcess;

    /**
     * Get the implicit join path to the <code>susy.review_process</code> table.
     */
    public ReviewProcessPath reviewProcess() {
        if (_reviewProcess == null)
            _reviewProcess = new ReviewProcessPath(this, Keys.REVIEW_PROCESS_STEP__FK_REVIEW_PROCESS_STATUS_REVIEW_PROCESS_ID, null);

        return _reviewProcess;
    }

    @Override
    public ReviewProcessStep as(String alias) {
        return new ReviewProcessStep(DSL.name(alias), this);
    }

    @Override
    public ReviewProcessStep as(Name alias) {
        return new ReviewProcessStep(alias, this);
    }

    @Override
    public ReviewProcessStep as(Table<?> alias) {
        return new ReviewProcessStep(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewProcessStep rename(String name) {
        return new ReviewProcessStep(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewProcessStep rename(Name name) {
        return new ReviewProcessStep(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewProcessStep rename(Table<?> name) {
        return new ReviewProcessStep(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep where(Condition condition) {
        return new ReviewProcessStep(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public ReviewProcessStep where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public ReviewProcessStep where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public ReviewProcessStep where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public ReviewProcessStep where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public ReviewProcessStep whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
